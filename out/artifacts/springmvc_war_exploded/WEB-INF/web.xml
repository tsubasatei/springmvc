<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--springmvc前端控制器-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--contextConfigLocation配置springMVC加载的配置文件（配置处理器映射器、适配器等）
            如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-servlet.xml(springmvc-servlet.xml)
        -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:config/springmvc.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!--
        第一种：*.action，访问以.action结尾由DispatcherServlet进行解析
        第二种：/,所有访问的地址都由DispatcherServlet进行解析，
        对于静态文件的解析需要配置不让DispatcherServlet进行解析，
        使用此种方式可以实现RESTful风格的url
        第三种：/*，这种配置不对，使用此种配置，最终要转发到一个jsp页面时，
        仍然会由ispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错。
        -->
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>

    <!--idea默认配置好的-->
    <!--<context-param>
        <param-name>contextConfigLocation</param-name>
        &lt;!&ndash;<param-value>/WEB-INF/applicationContext.xml</param-value>&ndash;&gt;
        <param-value>classpath:config/springmvc.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>-->
</web-app>